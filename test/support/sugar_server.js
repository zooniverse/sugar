// Generated by CoffeeScript 2.7.0
var Bluebird, Server, SugarClient, SugarServer;

Bluebird = require('bluebird');

Server = require('../../lib/server');

SugarClient = require('./sugar_client');

SugarServer = (function() {
  class SugarServer {
    static create() {
      var deferred, sugar;
      deferred = Bluebird.defer();
      sugar = new Server();
      sugar.port = 1024;
      sugar.server.on('error', function(e) {
        if (e.errno === 'EADDRINUSE') {
          sugar.port++;
          return sugar.listen(sugar.port);
        } else {
          throw e;
        }
      });
      sugar.server.on('listening', function() {
        sugar.createClient = function(query) {
          return new SugarClient(sugar, query);
        };
        return deferred.resolve(sugar);
      });
      sugar.listen(sugar.port);
      SugarServer.servers.push(sugar);
      return deferred.promise;
    }

    static closeAll() {
      var i, len, ref, sugar;
      ref = SugarServer.servers;
      for (i = 0, len = ref.length; i < len; i++) {
        sugar = ref[i];
        sugar.close();
      }
      SugarServer.servers = [];
      return Bluebird.resolve();
    }

  };

  SugarServer.servers = [];

  return SugarServer;

}).call(this);

module.exports = SugarServer;
